package fr.mla.swt.smart.viewer.scroll;

import java.util.List;

import org.eclipse.swt.graphics.Rectangle;

import fr.mla.swt.smart.viewer.layout.SmartViewerLayout;
import fr.mla.swt.smart.viewer.model.OrientationType;
import fr.mla.swt.smart.viewer.ui.SmartViewerItem;

public class GridScrollManeger<T> implements ScrollManager<T> {

	@Override
	public void applyScroll(Rectangle clientArea, int hScroll, int vScroll, SmartViewerLayout<T> layout,
			List<SmartViewerItem<T>> items, List<T> dataList) {
		if (dataList.size() > 0) {
			scrollModel(getStartModelIndex(clientArea, hScroll, vScroll, layout, items, dataList), items, dataList);
		}
	}

	@Override
	public int getStartModelIndex(Rectangle clientArea, int hScroll, int vScroll, SmartViewerLayout<T> layout,
			List<SmartViewerItem<T>> items, List<T> dataList) {
		int index = 0;
		if (hScroll != 0 || vScroll != 0) {
			index = layout.itemAt(clientArea, hScroll, vScroll, dataList);
		}
		return index;
	}

	@Override
	public int next(OrientationType type, SmartViewerLayout<T> layout, List<SmartViewerItem<T>> items, List<T> dataList) {
		if (type == OrientationType.VERTICAL) {
			return items.get(0).getHeight() + layout.getSpacing().y;
		} else {
			return items.get(0).getHeight() + layout.getSpacing().y;
		}
	}

	@Override
	public int previous(OrientationType type, SmartViewerLayout<T> layout, List<SmartViewerItem<T>> items,
			List<T> dataList) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int nextPage(OrientationType type, SmartViewerLayout<T> layout, List<SmartViewerItem<T>> items,
			List<T> dataList) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int previousPage(OrientationType type, SmartViewerLayout<T> layout, List<SmartViewerItem<T>> items,
			List<T> dataList) {
		// TODO Auto-generated method stub
		return 0;
	}

	private void scrollModel(int index, List<SmartViewerItem<T>> items, List<T> dataList) {
		if (index >= 0 && dataList.size() > 0) {
			for (SmartViewerItem<T> item : items) {
				if (index < dataList.size()) {
					item.setData(dataList.get(index), index);
				} else {
					item.setData(null, -1);
				}
				index++;
			}
		}
	}

}
